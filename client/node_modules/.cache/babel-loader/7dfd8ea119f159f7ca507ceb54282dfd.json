{"ast":null,"code":"var _jsxFileName = \"F:\\\\banking system\\\\client\\\\src\\\\components\\\\Modal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Modal = ({\n  user,\n  setModalDisplay,\n  modalDisplay\n}) => {\n  _s();\n\n  const [customers, makeTransaction] = useState([]);\n  const [formData, setFormData] = useState({\n    to: null,\n    amount: 0\n  });\n\n  const onChangeData = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const formSubmit = e => {\n    e.preventDefault();\n\n    if (formData.amount === 0 || formData.to === null) {\n      alert('Please fill the all data');\n    }\n\n    makeTransaction({\n      from: user._id,\n      to: formData.to,\n      amount: formData.amount\n    });\n    setModalDisplay(false);\n  };\n\n  const onModalClose = () => {\n    setFormData({\n      to: null,\n      amount: 0\n    });\n    setModalDisplay(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `modal ${modalDisplay ? 'modalShow' : 'modalHide'}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalContent\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modalClose\",\n        onClick: onModalClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: user === null || user === void 0 ? void 0 : user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: user === null || user === void 0 ? void 0 : user.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalBalance\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Balance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: user === null || user === void 0 ? void 0 : user.balance\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Make a Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formSubmit,\n        action: \"#\",\n        className: \"transactionFrom\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amount\",\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"amount\",\n          name: \"amount\",\n          value: formData.amount,\n          onChange: onChangeData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"receiver\",\n          children: \"Select to Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          defaultValue: \"DEFAULT\",\n          name: \"to\",\n          onChange: onChangeData,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"DEFAULT\",\n            disabled: true,\n            children: \"-- select a person --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), customers === null || customers === void 0 ? void 0 : customers.map(customer => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: customer._id,\n            children: customer.name\n          }, customer._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Procced\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Modal, \"rp7FM3Kz2Bp+mHa6iZBo0ZdAMPE=\");\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["F:/banking system/client/src/components/Modal.js"],"names":["React","useContext","useState","Modal","user","setModalDisplay","modalDisplay","customers","makeTransaction","formData","setFormData","to","amount","onChangeData","e","target","name","value","formSubmit","preventDefault","alert","from","_id","onModalClose","email","balance","map","customer"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react'\r\n\r\nconst Modal = ({ user, setModalDisplay, modalDisplay }) => {\r\n  const [customers, makeTransaction] = useState([])\r\n  const [formData, setFormData] = useState({\r\n    to: null,\r\n    amount: 0,\r\n  })\r\n  const onChangeData = e => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value })\r\n  }\r\n  const formSubmit = e => {\r\n    e.preventDefault()\r\n    if (formData.amount === 0 || formData.to === null) {\r\n      alert('Please fill the all data')\r\n    }\r\n    makeTransaction({\r\n      from: user._id,\r\n      to: formData.to,\r\n      amount: formData.amount,\r\n    })\r\n\r\n    setModalDisplay(false)\r\n  }\r\n\r\n  const onModalClose = () => {\r\n    setFormData({\r\n      to: null,\r\n      amount: 0,\r\n    })\r\n    setModalDisplay(false)\r\n  }\r\n  return (\r\n    <div className={`modal ${modalDisplay ? 'modalShow' : 'modalHide'}`}>\r\n      <div className='modalContent'>\r\n        <button className='modalClose' onClick={onModalClose}>\r\n          &times;\r\n        </button>\r\n        <h3>{user?.name}</h3>\r\n        <p>{user?.email}</p>\r\n        <div className='modalBalance'>\r\n          <p>Balance</p>\r\n          <h3>{user?.balance}</h3>\r\n        </div>\r\n        <h2>Make a Transaction</h2>\r\n        <form onSubmit={formSubmit} action='#' className='transactionFrom'>\r\n          <label htmlFor='amount'>Amount</label>\r\n          <input\r\n            type='number'\r\n            id='amount'\r\n            name='amount'\r\n            value={formData.amount}\r\n            onChange={onChangeData}\r\n          />\r\n          <br />\r\n          <label htmlFor='receiver'>Select to Send</label>\r\n          <select defaultValue='DEFAULT' name='to' onChange={onChangeData}>\r\n            <option value='DEFAULT' disabled>\r\n              -- select a person --\r\n            </option>\r\n            {customers?.map(customer => (\r\n              <option key={customer._id} value={customer._id}>\r\n                {customer.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <br />\r\n          <button type='submit'>Procced</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal"]},"metadata":{},"sourceType":"module"}