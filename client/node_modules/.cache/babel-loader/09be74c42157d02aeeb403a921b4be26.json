{"ast":null,"code":"var _jsxFileName = \"F:\\\\banking system\\\\client\\\\src\\\\context\\\\globalState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport globalContext from './globalContext';\nimport globalReducer from './globalReducers';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GlobalState = props => {\n  _s();\n\n  const initialState = {\n    customers: null,\n    transactions: null,\n    loading: false\n  };\n  const [state, dispatch] = useReducer(globalReducer, initialState);\n\n  const getCustomers = async () => {\n    loading(true);\n    const customers = await axios.get('./api/customers');\n    dispatch({\n      type: 'SET_CUSTOMERS',\n      payload: customers.data\n    });\n  };\n\n  const getTransactions = async () => {\n    loading(true);\n    const transactions = await axios.get('./api/transaction');\n    dispatch({\n      type: 'SET_TRANSACTIONS',\n      payload: transactions.data\n    });\n  };\n\n  const makeTransaction = async data => {\n    loading(true);\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      await axios.post('/api/transaction', data, config);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      getCustomers();\n      loading(false);\n    }\n  };\n\n  const loading = data => {\n    dispatch({\n      type: 'LOADING',\n      payload: data\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(globalContext.Provider, {\n    value: {\n      customers: state.customers,\n      transactions: state.transactions,\n      loading: state.loading,\n      getCustomers,\n      getTransactions,\n      makeTransaction\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GlobalState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = GlobalState;\nexport default GlobalState;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalState\");","map":{"version":3,"sources":["F:/banking system/client/src/context/globalState.js"],"names":["React","useReducer","globalContext","globalReducer","axios","GlobalState","props","initialState","customers","transactions","loading","state","dispatch","getCustomers","get","type","payload","data","getTransactions","makeTransaction","config","headers","post","error","console","log","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAAA;;AAC3B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,SAAS,EAAE,IADQ;AAEnBC,IAAAA,YAAY,EAAE,IAFK;AAGnBC,IAAAA,OAAO,EAAE;AAHU,GAArB;AAKA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,UAAU,CAACE,aAAD,EAAgBI,YAAhB,CAApC;;AAEA,QAAMM,YAAY,GAAG,YAAY;AAC/BH,IAAAA,OAAO,CAAC,IAAD,CAAP;AACA,UAAMF,SAAS,GAAG,MAAMJ,KAAK,CAACU,GAAN,CAAU,iBAAV,CAAxB;AACAF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,eADC;AAEPC,MAAAA,OAAO,EAAER,SAAS,CAACS;AAFZ,KAAD,CAAR;AAID,GAPD;;AAQA,QAAMC,eAAe,GAAG,YAAY;AAClCR,IAAAA,OAAO,CAAC,IAAD,CAAP;AACA,UAAMD,YAAY,GAAG,MAAML,KAAK,CAACU,GAAN,CAAU,mBAAV,CAA3B;AACAF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,kBADC;AAEPC,MAAAA,OAAO,EAAEP,YAAY,CAACQ;AAFf,KAAD,CAAR;AAID,GAPD;;AASA,QAAME,eAAe,GAAG,MAAMF,IAAN,IAAc;AACpCP,IAAAA,OAAO,CAAC,IAAD,CAAP;AACA,UAAMU,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;;AAKA,QAAI;AACF,YAAMjB,KAAK,CAACkB,IAAN,CAAW,kBAAX,EAA+BL,IAA/B,EAAqCG,MAArC,CAAN;AACD,KAFD,CAEE,OAAOG,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAJD,SAIU;AACRV,MAAAA,YAAY;AACZH,MAAAA,OAAO,CAAC,KAAD,CAAP;AACD;AACF,GAfD;;AAiBA,QAAMA,OAAO,GAAGO,IAAI,IAAI;AACtBL,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,SADC;AAEPC,MAAAA,OAAO,EAAEC;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,sBACE,QAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLT,MAAAA,SAAS,EAAEG,KAAK,CAACH,SADZ;AAELC,MAAAA,YAAY,EAAEE,KAAK,CAACF,YAFf;AAGLC,MAAAA,OAAO,EAAEC,KAAK,CAACD,OAHV;AAILG,MAAAA,YAJK;AAKLK,MAAAA,eALK;AAMLC,MAAAA;AANK,KADT;AAAA,cAUGb,KAAK,CAACoB;AAVT;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA/DD;;GAAMrB,W;;KAAAA,W;AAiEN,eAAeA,WAAf","sourcesContent":["import React, { useReducer } from 'react'\r\nimport globalContext from './globalContext'\r\nimport globalReducer from './globalReducers'\r\nimport axios from 'axios'\r\n\r\nconst GlobalState = props => {\r\n  const initialState = {\r\n    customers: null,\r\n    transactions: null,\r\n    loading: false,\r\n  }\r\n  const [state, dispatch] = useReducer(globalReducer, initialState)\r\n\r\n  const getCustomers = async () => {\r\n    loading(true)\r\n    const customers = await axios.get('./api/customers')\r\n    dispatch({\r\n      type: 'SET_CUSTOMERS',\r\n      payload: customers.data,\r\n    })\r\n  }\r\n  const getTransactions = async () => {\r\n    loading(true)\r\n    const transactions = await axios.get('./api/transaction')\r\n    dispatch({\r\n      type: 'SET_TRANSACTIONS',\r\n      payload: transactions.data,\r\n    })\r\n  }\r\n\r\n  const makeTransaction = async data => {\r\n    loading(true)\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n    try {\r\n      await axios.post('/api/transaction', data, config)\r\n    } catch (error) {\r\n      console.log(error)\r\n    } finally {\r\n      getCustomers()\r\n      loading(false)\r\n    }\r\n  }\r\n\r\n  const loading = data => {\r\n    dispatch({\r\n      type: 'LOADING',\r\n      payload: data,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <globalContext.Provider\r\n      value={{\r\n        customers: state.customers,\r\n        transactions: state.transactions,\r\n        loading: state.loading,\r\n        getCustomers,\r\n        getTransactions,\r\n        makeTransaction,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </globalContext.Provider>\r\n  )\r\n}\r\n\r\nexport default GlobalState"]},"metadata":{},"sourceType":"module"}