{"ast":null,"code":"var _jsxFileName = \"F:\\\\banking system\\\\client\\\\src\\\\components\\\\Transaction.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport globalContext from '../context/globalContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nconst Transactions = () => {\n  _s();\n\n  var _transactions;\n\n  const [transaction, setTransaction] = useState([]);\n  useEffect(() => {\n    axios.get('https://localhost:5000/transaction').then;\n  }, []);\n\n  const formatDate = date => {\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      timeZone: 'Asia/Kolkata',\n      hour12: true,\n      hour: '2-digit',\n      minute: '2-digit'\n    };\n    return new Date(date).toLocaleString('en-US', options);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transactionContainer\",\n    children: [loading && /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"loading\",\n      children: \"loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 19\n    }, this), !loading && /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"transaction\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"TFrom\",\n            children: \"FROM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"TTO\",\n            children: \"TO\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"TAmount\",\n            children: \"AMOUNT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"TDate\",\n            children: \"DATE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: (_transactions = transactions) === null || _transactions === void 0 ? void 0 : _transactions.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"transaction\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"TFrom\",\n            children: item.from.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"TTO\",\n            children: item.to.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"TAmount\",\n            children: item.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"TDate\",\n            children: formatDate(item.date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this)]\n        }, item._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Transactions, \"p9lDh0XP14rVvrs8vbgxMZuwMRs=\");\n\n_c = Transactions;\nexport default Transactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"sources":["F:/banking system/client/src/components/Transaction.js"],"names":["React","useContext","useEffect","globalContext","axios","require","Transactions","transaction","setTransaction","useState","get","then","formatDate","date","options","year","month","day","timeZone","hour12","hour","minute","Date","toLocaleString","loading","transactions","map","item","from","name","to","amount","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,aAAP,MAA0B,0BAA1B;;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAAA;;AACzB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAA+BC,QAAQ,CAAC,EAAD,CAA7C;AACAP,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CACNM,GADC,CACG,oCADH,EAEDC,IAFC;AAGH,GAJQ,EAIN,EAJM,CAAT;;AAKA,QAAMC,UAAU,GAAGC,IAAI,IAAI;AACzB,UAAMC,OAAO,GAAG;AACdC,MAAAA,IAAI,EAAE,SADQ;AAEdC,MAAAA,KAAK,EAAE,MAFO;AAGdC,MAAAA,GAAG,EAAE,SAHS;AAIdC,MAAAA,QAAQ,EAAE,cAJI;AAKdC,MAAAA,MAAM,EAAE,IALM;AAMdC,MAAAA,IAAI,EAAE,SANQ;AAOdC,MAAAA,MAAM,EAAE;AAPM,KAAhB;AASA,WAAO,IAAIC,IAAJ,CAAST,IAAT,EAAeU,cAAf,CAA8B,OAA9B,EAAuCT,OAAvC,CAAP;AACD,GAXD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA,eACGU,OAAO,iBAAI;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADd,EAEG,CAACA,OAAD,iBACC;AAAA,8BACE;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAI,YAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAI,YAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAI,YAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAA,mCACGC,YADH,kDACG,cAAcC,GAAd,CAAkBC,IAAI,iBACrB;AAAmB,UAAA,SAAS,EAAC,aAA7B;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,OAAd;AAAA,sBAAuBA,IAAI,CAACC,IAAL,CAAUC;AAAjC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAI,YAAA,SAAS,EAAC,KAAd;AAAA,sBAAqBF,IAAI,CAACG,EAAL,CAAQD;AAA7B;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAI,YAAA,SAAS,EAAC,SAAd;AAAA,sBAAyBF,IAAI,CAACI;AAA9B;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAI,YAAA,SAAS,EAAC,OAAd;AAAA,sBAAuBnB,UAAU,CAACe,IAAI,CAACd,IAAN;AAAjC;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA,WAASc,IAAI,CAACK,GAAd;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CA9CD;;GAAM1B,Y;;KAAAA,Y;AAgDN,eAAeA,YAAf","sourcesContent":["import React, { useContext, useEffect } from 'react'\r\nimport globalContext from '../context/globalContext'\r\nconst axios = require('axios')\r\n\r\nconst Transactions = () => {\r\n  const [transaction, setTransaction] =useState([])\r\n  useEffect(() => {\r\n      axios\r\n    .get('https://localhost:5000/transaction')\r\n    .then\r\n  }, [])\r\n  const formatDate = date => {\r\n    const options = {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric',\r\n      timeZone: 'Asia/Kolkata',\r\n      hour12: true,\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n    }\r\n    return new Date(date).toLocaleString('en-US', options)\r\n  }\r\n  return (\r\n    <div className='transactionContainer'>\r\n      {loading && <h2 className='loading'>loading ...</h2>}\r\n      {!loading && (\r\n        <table>\r\n          <thead>\r\n            <tr className='transaction'>\r\n              <th className='TFrom'>FROM</th>\r\n              <th className='TTO'>TO</th>\r\n              <th className='TAmount'>AMOUNT</th>\r\n              <th className='TDate'>DATE</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {transactions?.map(item => (\r\n              <tr key={item._id} className='transaction'>\r\n                <td className='TFrom'>{item.from.name}</td>\r\n                <td className='TTO'>{item.to.name}</td>\r\n                <td className='TAmount'>{item.amount}</td>\r\n                <td className='TDate'>{formatDate(item.date)}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Transactions"]},"metadata":{},"sourceType":"module"}